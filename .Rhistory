mutate(`p-valor`=as.character(`p-valor`))
data <- replace(data, data=="0", "< 0,0001")
}
knitr::kable(data, booktabs = TRUE,
digits = 4, caption = caption, align = align,
col.names = col.names, linesep="", label = label,
format.args = list(decimal.mark = ',')) %>%
kable_styling(latex_options = "HOLD_position", font_size = 10)
}
library(tidyverse)
set.seed(13)
fish <- read_csv("banco/fish.csv")
fish <- within(fish, {
# FISH_COUNT <- factor(FISH_COUNT)
LIVE_BAIT <- factor(LIVE_BAIT)
CAMPER <- factor(CAMPER)
})
fish <- fish %>%
mutate(id = row_number())#Check IDs
# head(fish$id)#Create training set
fish_train <- fish %>%
sample_frac(.70)#Create test set
fish_test  <- anti_join(fish, fish_train, by = 'id')
fish <- fish_train
# l <- summary(fish) %>% as_tibble()
# kable(l, caption="")
ggplot(fish, aes(FISH_COUNT)) +
geom_histogram(col="grey") +
scale_x_log10() +
theme_bw() +
ylab("Frequência (escala log10)") +
xlab("Peixes capturados")
library(AER)
rd <- glm(FISH_COUNT ~ CHILDREN + CAMPER + PERSONS, data = fish, family = poisson)
disp <- dispersiontest(rd,trafo=1)
require(ggplot2)
require(pscl)
require(boot)
m1 <- zeroinfl(FISH_COUNT ~ CHILDREN + CAMPER + LIVE_BAIT| PERSONS, data = fish)
library(kableExtra)
sum_m1 <- summary(m1)
count <- sum_m1[["coefficients"]][["count"]] %>%
as_tibble() %>%
rename("p-valor"="Pr(>|z|)") %>%
mutate(Parametro = c("Intercepto", "CHILDREN", "CAMPER (1)", "LIVE_BAIT(1)"))
zeros <- sum_m1[["coefficients"]][["zero"]] %>%
as_tibble() %>%
rename("p-valor"="Pr(>|z|)") %>%
mutate(Parametro = c("Intercepto", "PERSONS"))
tab_resultados <- bind_rows(count, zeros)
## compare with normal based approximation
ic <- confint(m1)
ic1 <- as_tibble(ic)
# kable(ic, caption="Intervalo de confiança dos parâmetros")
tab_resultados  <- bind_cols(tab_resultados, ic1) %>%
select(Parametro, Estimate, `Std. Error`, `z value`, `p-valor`, `2.5 %`, `97.5 %`)
tab_resultados
summary(m1)
## Região para predição
pred <- expand.grid(campista = c("Não", "Sim"),
ncriancas = 0:3, npessoas = 1:4)
prde
pred
knitr::opts_chunk$set(echo = F, out.extra = "", message = F,
warning = F, fig.align="center", fig.pos = "H", fig.height = 2)
kable <- function(data, caption, col.names=NA, label=NULL, pvalor=FALSE, align = 'c') {
if(pvalor==TRUE){
data <- data %>%
mutate(`p-valor`=round(`p-valor`, 4)) %>%
mutate(`p-valor`=replace(`p-valor`, `p-valor`<0.0001, 0)) %>%
mutate(`p-valor`=as.character(`p-valor`))
data <- replace(data, data=="0", "< 0,0001")
}
knitr::kable(data, booktabs = TRUE,
digits = 4, caption = caption, align = align,
col.names = col.names, linesep="", label = label,
format.args = list(decimal.mark = ',')) %>%
kable_styling(latex_options = "HOLD_position", font_size = 10)
}
library(tidyverse)
set.seed(13)
fish <- read_csv("banco/fish.csv")
fish <- within(fish, {
# FISH_COUNT <- factor(FISH_COUNT)
LIVE_BAIT <- factor(LIVE_BAIT)
CAMPER <- factor(CAMPER)
})
# fish <- fish %>%
# mutate(id = row_number())#Check IDs
# head(fish$id)#Create training set
# fish_train <- fish %>%
#   sample_frac(.70)#Create test set
#
# fish_test  <- anti_join(fish, fish_train, by = 'id')
# fish <- fish_train
# l <- summary(fish) %>% as_tibble()
# kable(l, caption="")
ggplot(fish, aes(FISH_COUNT)) +
geom_histogram(col="grey") +
scale_x_log10() +
theme_bw() +
ylab("Frequência (escala log10)") +
xlab("Peixes capturados")
library(AER)
rd <- glm(FISH_COUNT ~ CHILDREN + CAMPER + PERSONS, data = fish, family = poisson)
disp <- dispersiontest(rd,trafo=1)
require(ggplot2)
require(pscl)
require(boot)
m1 <- zeroinfl(FISH_COUNT ~ CHILDREN + CAMPER + LIVE_BAIT| PERSONS, data = fish)
library(kableExtra)
sum_m1 <- summary(m1)
count <- sum_m1[["coefficients"]][["count"]] %>%
as_tibble() %>%
rename("p-valor"="Pr(>|z|)") %>%
mutate(Parametro = c("Intercepto", "CHILDREN", "CAMPER (1)", "LIVE_BAIT(1)"))
zeros <- sum_m1[["coefficients"]][["zero"]] %>%
as_tibble() %>%
rename("p-valor"="Pr(>|z|)") %>%
mutate(Parametro = c("Intercepto", "PERSONS"))
tab_resultados <- bind_rows(count, zeros)
# bind_rows(count, zeros) %>%
#   rename(Estimativa=Estimate) %>%
#   select(Parametro, Estimativa, `Std. Error`, `z value`, `p-valor`) %>%
#   kable(caption="Modelo de zeros.", pvalor=T) %>%
#   add_header_above("Modelo de contagem." = 5)
# kable(count, caption="Modelo de contagens.", pvalor=T)
# kable(zeros, caption="Modelo de zeros", pvalor=T)
## compare with normal based approximation
ic <- confint(m1)
ic1 <- as_tibble(ic)
# kable(ic, caption="Intervalo de confiança dos parâmetros")
tab_resultados  <- bind_cols(tab_resultados, ic1) %>%
select(Parametro, Estimate, `Std. Error`, `z value`, `p-valor`, `2.5 %`, `97.5 %`) %>%
rename(Estimativa=Estimate, `Erro padrão` = `Std. Error`, Z = `z value`)
# Estimate <- c(1.5979, -1.0428, 0.8340, 1.2974, -0.5643)
# Std.Error <- c( 0.0855, 0.1000, 0.0936, 0.3739, 0.1630)
# Z.Value <- c(18.6804, -10.4296, 8.9079, 3.4705, -3.4630)
# P.Valor <- c("<0.001","<0,001","<0,001","5e-04","5e-04")
# Parametro <- c( "Intercepto", "CHILDREN", "CAMPER (1)", "Intercepto", "PEARSONS")
# Porcento2.5 <- c(1.4302, -1.2388, 0.6505, 0.5647, -0.8838)
# Porcento97.5 <- c(1.7655, -0.8469, 1.0175, 2.0302, -0.2449)
# Tabela <- data.frame(Estimate,Std.Error,Z.Value,P.Valor,Parametro,Porcento2.5,Porcento97.5) %>%
#   as_tibble() %>%
#   rename(Estimativa = Estimate, `Erro padrão` = Std.Error, Z = Z.Value,
#          `p-valor`=P.Valor, `Parâmetro`=Parametro, `IC(2,5%)`=Porcento2.5, `IC(97,5%)`=Porcento97.5) %>%
#   select(`Parâmetro`, Estimativa, `Erro padrão`, Z, `p-valor`, `IC(2,5%)`, `IC(97,5%)`)
tab <- kable(tab_resultados, caption = "Estimativas do modelo ZIP.", pvalor = T) %>%
pack_rows("Regressão Logística", 5, 6) %>%
pack_rows("Regressão de Poisson", 1, 4)
tab
p1 <- glm(FISH_COUNT ~ CHILDREN + CAMPER, family = poisson, data = fish)
voung <- vuong(p1, m1)
mnull <- update(m1, . ~ 1)
p <- pchisq(2 * (logLik(m1) - logLik(mnull)), df = 3, lower.tail = FALSE)
newdata1 <- expand.grid(0:3, factor(0:1), 1:4)
colnames(newdata1) <- c("CHILDREN", "CAMPER", "PERSONS")
newdata1 <- subset(newdata1, subset=(CHILDREN<=PERSONS))
fish_test$phat <- predict(newdata1, fish_test)
## Região para predição
pred <- expand.grid(campista = c("Não", "Sim"),
ncriancas = 0:3, npessoas = 1:4)
fish_test
newdata1
newdata1 <- expand.grid(0:3, factor(0:1), 1:4)
colnames(newdata1) <- c("CHILDREN", "CAMPER", "PERSONS")
newdata1 <- subset(newdata1, subset=(CHILDREN<=PERSONS))
fish_test$phat <- predict(m1, newdata1)
newdata1 <- expand.grid(0:3, factor(0:1), 1:4, 0:1)
colnames(newdata1) <- c("CHILDREN", "CAMPER", "PERSONS", "LIVE_BAIT")
newdata1 <- subset(newdata1, subset=(CHILDREN<=PERSONS))
fish_test$phat <- predict(m1, newdata1)
m1
newdata1
newdata1 <- expand.grid(0:3, factor(0:1), 1:4, 0:1)
colnames(newdata1) <- c("CHILDREN", "CAMPER", "PERSONS", "LIVE_BAIT")
newdata1 <- subset(newdata1, subset=(CHILDREN<=PERSONS))
fish_test$phat <- predict(m1, newdata1)
newdata1 <- expand.grid(0:3, factor(0:1), 1:4, factor(0:1))
colnames(newdata1) <- c("CHILDREN", "CAMPER", "PERSONS", "LIVE_BAIT")
newdata1 <- subset(newdata1, subset=(CHILDREN<=PERSONS))
fish_test$phat <- predict(m1, newdata1)
newdata1 <- expand.grid(0:3, factor(0:1), 1:4, factor(0:1))
colnames(newdata1) <- c("CHILDREN", "CAMPER", "PERSONS", "LIVE_BAIT")
newdata1 <- subset(newdata1, subset=(CHILDREN<=PERSONS))
fish_test$phat <- predict(m1, newdata1)
knitr::opts_chunk$set(echo = F, out.extra = "", message = F,
warning = F, fig.align="center", fig.pos = "H", fig.height = 2)
kable <- function(data, caption, col.names=NA, label=NULL, pvalor=FALSE, align = 'c') {
if(pvalor==TRUE){
data <- data %>%
mutate(`p-valor`=round(`p-valor`, 4)) %>%
mutate(`p-valor`=replace(`p-valor`, `p-valor`<0.0001, 0)) %>%
mutate(`p-valor`=as.character(`p-valor`))
data <- replace(data, data=="0", "< 0,0001")
}
knitr::kable(data, booktabs = TRUE,
digits = 4, caption = caption, align = align,
col.names = col.names, linesep="", label = label,
format.args = list(decimal.mark = ',')) %>%
kable_styling(latex_options = "HOLD_position", font_size = 10)
}
library(tidyverse)
set.seed(13)
fish <- read_csv("banco/fish.csv")
fish <- within(fish, {
# FISH_COUNT <- factor(FISH_COUNT)
LIVE_BAIT <- factor(LIVE_BAIT)
CAMPER <- factor(CAMPER)
})
# fish <- fish %>%
# mutate(id = row_number())#Check IDs
# head(fish$id)#Create training set
# fish_train <- fish %>%
#   sample_frac(.70)#Create test set
#
# fish_test  <- anti_join(fish, fish_train, by = 'id')
# fish <- fish_train
# l <- summary(fish) %>% as_tibble()
# kable(l, caption="")
ggplot(fish, aes(FISH_COUNT)) +
geom_histogram(col="grey") +
scale_x_log10() +
theme_bw() +
ylab("Frequência (escala log10)") +
xlab("Peixes capturados")
library(AER)
rd <- glm(FISH_COUNT ~ CHILDREN + CAMPER + PERSONS, data = fish, family = poisson)
disp <- dispersiontest(rd,trafo=1)
require(ggplot2)
require(pscl)
require(boot)
m1 <- zeroinfl(FISH_COUNT ~ CHILDREN + CAMPER| PERSONS, data = fish)
library(kableExtra)
sum_m1 <- summary(m1)
count <- sum_m1[["coefficients"]][["count"]] %>%
as_tibble() %>%
rename("p-valor"="Pr(>|z|)") %>%
mutate(Parametro = c("Intercepto", "CHILDREN", "CAMPER (1)", "LIVE_BAIT(1)"))
knitr::opts_chunk$set(echo = F, out.extra = "", message = F,
warning = F, fig.align="center", fig.pos = "H", fig.height = 2)
kable <- function(data, caption, col.names=NA, label=NULL, pvalor=FALSE, align = 'c') {
if(pvalor==TRUE){
data <- data %>%
mutate(`p-valor`=round(`p-valor`, 4)) %>%
mutate(`p-valor`=replace(`p-valor`, `p-valor`<0.0001, 0)) %>%
mutate(`p-valor`=as.character(`p-valor`))
data <- replace(data, data=="0", "< 0,0001")
}
knitr::kable(data, booktabs = TRUE,
digits = 4, caption = caption, align = align,
col.names = col.names, linesep="", label = label,
format.args = list(decimal.mark = ',')) %>%
kable_styling(latex_options = "HOLD_position", font_size = 10)
}
library(tidyverse)
set.seed(13)
fish <- read_csv("banco/fish.csv")
fish <- within(fish, {
# FISH_COUNT <- factor(FISH_COUNT)
LIVE_BAIT <- factor(LIVE_BAIT)
CAMPER <- factor(CAMPER)
})
# fish <- fish %>%
# mutate(id = row_number())#Check IDs
# head(fish$id)#Create training set
# fish_train <- fish %>%
#   sample_frac(.70)#Create test set
#
# fish_test  <- anti_join(fish, fish_train, by = 'id')
# fish <- fish_train
# l <- summary(fish) %>% as_tibble()
# kable(l, caption="")
ggplot(fish, aes(FISH_COUNT)) +
geom_histogram(col="grey") +
scale_x_log10() +
theme_bw() +
ylab("Frequência (escala log10)") +
xlab("Peixes capturados")
library(AER)
rd <- glm(FISH_COUNT ~ CHILDREN + CAMPER + PERSONS, data = fish, family = poisson)
disp <- dispersiontest(rd,trafo=1)
require(ggplot2)
require(pscl)
require(boot)
m1 <- zeroinfl(FISH_COUNT ~ CHILDREN + CAMPER| PERSONS, data = fish)
library(kableExtra)
sum_m1 <- summary(m1)
count <- sum_m1[["coefficients"]][["count"]] %>%
as_tibble() %>%
rename("p-valor"="Pr(>|z|)") %>%
mutate(Parametro = c("Intercepto", "CHILDREN", "CAMPER (1)"))
zeros <- sum_m1[["coefficients"]][["zero"]] %>%
as_tibble() %>%
rename("p-valor"="Pr(>|z|)") %>%
mutate(Parametro = c("Intercepto", "PERSONS"))
tab_resultados <- bind_rows(count, zeros)
# bind_rows(count, zeros) %>%
#   rename(Estimativa=Estimate) %>%
#   select(Parametro, Estimativa, `Std. Error`, `z value`, `p-valor`) %>%
#   kable(caption="Modelo de zeros.", pvalor=T) %>%
#   add_header_above("Modelo de contagem." = 5)
# kable(count, caption="Modelo de contagens.", pvalor=T)
# kable(zeros, caption="Modelo de zeros", pvalor=T)
## compare with normal based approximation
ic <- confint(m1)
ic1 <- as_tibble(ic)
# kable(ic, caption="Intervalo de confiança dos parâmetros")
tab_resultados  <- bind_cols(tab_resultados, ic1) %>%
select(Parametro, Estimate, `Std. Error`, `z value`, `p-valor`, `2.5 %`, `97.5 %`) %>%
rename(Estimativa=Estimate, `Erro padrão` = `Std. Error`, Z = `z value`)
# Estimate <- c(1.5979, -1.0428, 0.8340, 1.2974, -0.5643)
# Std.Error <- c( 0.0855, 0.1000, 0.0936, 0.3739, 0.1630)
# Z.Value <- c(18.6804, -10.4296, 8.9079, 3.4705, -3.4630)
# P.Valor <- c("<0.001","<0,001","<0,001","5e-04","5e-04")
# Parametro <- c( "Intercepto", "CHILDREN", "CAMPER (1)", "Intercepto", "PEARSONS")
# Porcento2.5 <- c(1.4302, -1.2388, 0.6505, 0.5647, -0.8838)
# Porcento97.5 <- c(1.7655, -0.8469, 1.0175, 2.0302, -0.2449)
# Tabela <- data.frame(Estimate,Std.Error,Z.Value,P.Valor,Parametro,Porcento2.5,Porcento97.5) %>%
#   as_tibble() %>%
#   rename(Estimativa = Estimate, `Erro padrão` = Std.Error, Z = Z.Value,
#          `p-valor`=P.Valor, `Parâmetro`=Parametro, `IC(2,5%)`=Porcento2.5, `IC(97,5%)`=Porcento97.5) %>%
#   select(`Parâmetro`, Estimativa, `Erro padrão`, Z, `p-valor`, `IC(2,5%)`, `IC(97,5%)`)
tab <- kable(tab_resultados, caption = "Estimativas do modelo ZIP.", pvalor = T) %>%
pack_rows("Regressão Logística", 5, 6) %>%
pack_rows("Regressão de Poisson", 1, 4)
knitr::opts_chunk$set(echo = F, out.extra = "", message = F,
warning = F, fig.align="center", fig.pos = "H", fig.height = 2)
kable <- function(data, caption, col.names=NA, label=NULL, pvalor=FALSE, align = 'c') {
if(pvalor==TRUE){
data <- data %>%
mutate(`p-valor`=round(`p-valor`, 4)) %>%
mutate(`p-valor`=replace(`p-valor`, `p-valor`<0.0001, 0)) %>%
mutate(`p-valor`=as.character(`p-valor`))
data <- replace(data, data=="0", "< 0,0001")
}
knitr::kable(data, booktabs = TRUE,
digits = 4, caption = caption, align = align,
col.names = col.names, linesep="", label = label,
format.args = list(decimal.mark = ',')) %>%
kable_styling(latex_options = "HOLD_position", font_size = 10)
}
diag <- function(fit.model){
#------------------------------------------------------------#
# Para rodar este programa  deixe no objeto   fit.model a
# saída do  ajuste  da  regressão com erros Poisson.
# Deixe  os dados disponíveis  através do comando attach(...).
# Depois use o comando source(...) no S-Plus ou R para
# executar o programa. A sequência de comandos é a seguinte:
#
#        > fit.model <- ajuste
#        > attach(dados)
#        > source("diag_pois")
#
# A saída terá quatro gráficos: de pontos de alacanca,
# de pontos influentes  e  dois de resíduos. Para identificar
# os pontos que  mais  se destacam usar o comando
# identify(...). Se por exemplo se destacam três pontos no
# plot(fitted(fit.model),h,...), após esse comando coloque
#
#        > identify(fitted(fit.model),h,n=3)
#
# O mesmo pode ser feito nos demais gráficos. Nos gráficos de
# resíduos foram colocados os limites ylim=c(a-1,b+1), em que
# a é o menor valor e b o maior valor para o resíduo.
#------------------------------------------------------------#
X <- model.matrix(fit.model)
n <- nrow(X)
p <- ncol(X)
w <- fit.model$weights
W <- diag(w)
H <- solve(t(X)%*%W%*%X)
H <- sqrt(W)%*%X%*%H%*%t(X)%*%sqrt(W)
h <- diag(H)
ts <- resid(fit.model,type="pearson")/sqrt(1-h)
td <- resid(fit.model,type="deviance")/sqrt(1-h)
di <- (h/(1-h))*(ts^2)
par(mfrow=c(2,2))
a <- min(td)
b <- max(td)
plot(fitted(fit.model), h,xlab="Valor Ajustado", ylab="Medida h",
pch=16)
#identify(fitted(fit.model), h, n=1)
#
plot(di,xlab="Índice", ylab="Distância de Cook",
pch=16)
#identify(di, n=1)
#
plot(td,xlab="Índice", ylab="Resíduo Componente do Desvio",
ylim=c(a-1,b+1), pch=16)
abline(2,0,lty=2)
abline(-2,0,lty=2)
#identify(td, n=1)
#
w <- fit.model$weights
eta <- predict(fit.model)
z <- eta + resid(fit.model, type="pearson")/sqrt(w)
plot(predict(fit.model),z,xlab="Preditor Linear",
ylab="Variavel z", pch=16)
lines(smooth.spline(predict(fit.model), z, df=2))
par(mfrow=c(1,1))
#---------------------------------------------------------------#
}
library(tidyverse)
set.seed(13)
fish <- read_csv("banco/fish.csv")
fish <- within(fish, {
# FISH_COUNT <- factor(FISH_COUNT)
LIVE_BAIT <- factor(LIVE_BAIT)
CAMPER <- factor(CAMPER)
})
# fish <- fish %>%
# mutate(id = row_number())#Check IDs
# head(fish$id)#Create training set
# fish_train <- fish %>%
#   sample_frac(.70)#Create test set
#
# fish_test  <- anti_join(fish, fish_train, by = 'id')
# fish <- fish_train
# l <- summary(fish) %>% as_tibble()
# kable(l, caption="")
ggplot(fish, aes(FISH_COUNT)) +
geom_histogram(col="grey") +
scale_x_log10() +
theme_bw() +
ylab("Frequência (escala log10)") +
xlab("Peixes capturados")
library(AER)
rd <- glm(FISH_COUNT ~ CHILDREN + CAMPER + PERSONS, data = fish, family = poisson)
disp <- dispersiontest(rd,trafo=1)
require(ggplot2)
require(pscl)
# require(boot)
m1 <- zeroinfl(FISH_COUNT ~ CHILDREN + CAMPER| PERSONS, data = fish)
library(kableExtra)
sum_m1 <- summary(m1)
count <- sum_m1[["coefficients"]][["count"]] %>%
as_tibble() %>%
rename("p-valor"="Pr(>|z|)") %>%
mutate(Parametro = c("Intercepto", "CHILDREN", "CAMPER (1)"))
zeros <- sum_m1[["coefficients"]][["zero"]] %>%
as_tibble() %>%
rename("p-valor"="Pr(>|z|)") %>%
mutate(Parametro = c("Intercepto", "PERSONS"))
tab_resultados <- bind_rows(count, zeros)
# bind_rows(count, zeros) %>%
#   rename(Estimativa=Estimate) %>%
#   select(Parametro, Estimativa, `Std. Error`, `z value`, `p-valor`) %>%
#   kable(caption="Modelo de zeros.", pvalor=T) %>%
#   add_header_above("Modelo de contagem." = 5)
# kable(count, caption="Modelo de contagens.", pvalor=T)
# kable(zeros, caption="Modelo de zeros", pvalor=T)
## compare with normal based approximation
ic <- confint(m1)
ic1 <- as_tibble(ic)
# kable(ic, caption="Intervalo de confiança dos parâmetros")
tab_resultados  <- bind_cols(tab_resultados, ic1) %>%
select(Parametro, Estimate, `Std. Error`, `z value`, `p-valor`, `2.5 %`, `97.5 %`) %>%
rename(Estimativa=Estimate, `Erro padrão` = `Std. Error`, `Estatística do teste` = `z value`) %>%
mutate(`IC(95%)`=paste("[", round(`2.5 %`, 4), "; ",round(`97.5 %`, 4), "]")) %>%
select(-c(`2.5 %`, `97.5 %`))
# Estimate <- c(1.5979, -1.0428, 0.8340, 1.2974, -0.5643)
# Std.Error <- c( 0.0855, 0.1000, 0.0936, 0.3739, 0.1630)
# Z.Value <- c(18.6804, -10.4296, 8.9079, 3.4705, -3.4630)
# P.Valor <- c("<0.001","<0,001","<0,001","5e-04","5e-04")
# Parametro <- c( "Intercepto", "CHILDREN", "CAMPER (1)", "Intercepto", "PEARSONS")
# Porcento2.5 <- c(1.4302, -1.2388, 0.6505, 0.5647, -0.8838)
# Porcento97.5 <- c(1.7655, -0.8469, 1.0175, 2.0302, -0.2449)
# Tabela <- data.frame(Estimate,Std.Error,Z.Value,P.Valor,Parametro,Porcento2.5,Porcento97.5) %>%
#   as_tibble() %>%
#   rename(Estimativa = Estimate, `Erro padrão` = Std.Error, Z = Z.Value,
#          `p-valor`=P.Valor, `Parâmetro`=Parametro, `IC(2,5%)`=Porcento2.5, `IC(97,5%)`=Porcento97.5) %>%
#   select(`Parâmetro`, Estimativa, `Erro padrão`, Z, `p-valor`, `IC(2,5%)`, `IC(97,5%)`)
tab <- kable(tab_resultados, caption = "Estimativas do modelo ZIP proposto.", pvalor = T) %>%
pack_rows("Regressão Logística", 4, 5) %>%
pack_rows("Regressão de Poisson", 1, 3)
tab
p1 <- glm(FISH_COUNT ~ CHILDREN + CAMPER, family = poisson, data = fish)
voung <- vuong(p1, m1)
mnull <- update(m1, . ~ 1)
p <- pchisq(2 * (logLik(m1) - logLik(mnull)), df = 3, lower.tail = FALSE)
# diag(m1)
diga(m1)
diag(m1)
attach(fish)
diag(m1)
X <- model.matrix(m1)
n <- nrow(X)
p <- ncol(X)
w <- fit.model$weights
W <- diag(w)
fit.model <- m1
X <- model.matrix(fit.model)
n <- nrow(X)
p <- ncol(X)
w <- fit.model$weights
W <- diag(w)
W <- diag(w)
W
w <- fit.model$weights
w
W <- diag(w)
W <- diag(w)
diag(w)
W <- diag(as.matrix(w))
w <- fit.model$weights
type(w)
class(w)
W <- diag(as.data.frame(w))
W <- diag(as.data.frame.array(w))
w <- fit.model$weights
w
